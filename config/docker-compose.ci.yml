version: '3.8'

services:
  test:
    build:
      context: .
      target: test
    environment:
      - NODE_ENV=test
      - CI=true
      - TEST_DATABASE_URL=postgresql://test:test@test-db:5432/test
    depends_on:
      test-db:
        condition: service_healthy
    volumes:
      - ./coverage:/app/coverage
    networks:
      - test-network

  test-db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d test"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

  e2e:
    build:
      context: .
      target: test
    environment:
      - NODE_ENV=test
      - CI=true
      - TEST_DATABASE_URL=postgresql://test:test@test-db:5432/test_e2e
      - BASE_URL=http://web:3000
    depends_on:
      web:
        condition: service_healthy
      test-db:
        condition: service_healthy
    volumes:
      - ./e2e/videos:/e2e/videos
      - ./e2e/screenshots:/e2e/screenshots
    command: npm run test:e2e
    networks:
      - test-network

  web:
    build:
      context: .
      target: test
    environment:
      - NODE_ENV=test
      - DATABASE_URL=postgresql://test:test@test-db:5432/test_e2e
    depends_on:
      test-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  test-db-data:
  test-uploads:
